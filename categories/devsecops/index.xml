<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Devsecops on securi(tty)</title>
    <link>/categories/devsecops/</link>
    <description>Recent content in Devsecops on securi(tty)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 15 Nov 2018 08:33:20 +0100</lastBuildDate>
    
	<atom:link href="/categories/devsecops/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>DIP</title>
      <link>/post/dip/</link>
      <pubDate>Thu, 15 Nov 2018 08:33:20 +0100</pubDate>
      
      <guid>/post/dip/</guid>
      <description>Changed my mind to make DIP instead of doing presentation during the Hack Day for workshops (which is still valid idea). This project is named after DevSecOps In A Pill, basically shell wrapper to include in development pipeline that for now has three basic functions:
 scan remote web target for vulnerabilities and misconfigurations
look for vulnerable dependencies used in project (OWASP Dependency Check)
search for sensitive exposed secrets in git repositories</description>
    </item>
    
    <item>
      <title>DVNA</title>
      <link>/post/dvna/</link>
      <pubDate>Tue, 13 Nov 2018 09:53:23 +0100</pubDate>
      
      <guid>/post/dvna/</guid>
      <description>As a project for upcoming company&amp;rsquo;s internal hackday I chose to make workshops for secure coding in JavaScript, based on OWASP TOP 10 and Damn Vulnerable NodeJS Application. While I&amp;rsquo;m no coder by myself, I thought I might prepare as much I can from security perspective and use some feeback from more knowledgeable collegue in terms of code itself. The idea came when I stumbled upon &amp;ldquo;solution&amp;rdquo; book to DVNA itself from AppSeco.</description>
    </item>
    
  </channel>
</rss>